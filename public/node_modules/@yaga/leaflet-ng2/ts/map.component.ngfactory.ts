/**
 * @fileoverview This file is generated by the Angular template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride}
 */
 /* tslint:disable */


import * as import0 from '@angular/core';
import * as import1 from './map.component';
const styles_MapComponent:any[] = ([] as any[]);
export const RenderType_MapComponent:import0.RendererType2 = import0.ɵcrt({
  encapsulation: 2,
  styles: styles_MapComponent,
  data: {}
}
);
export function View_MapComponent_0(l:any):import0.ɵViewDefinition {
  return import0.ɵvid(0,[
      (l()(),import0.ɵeld(0,(null as any),(null as any),1,'span',[[
        'style',
        'display: none'
      ]
    ],(null as any),(null as any),(null as any),(null as any),(null as any))),
    import0.ɵncd((null as any),0)
  ]
  ,(null as any),(null as any));
}
function View_MapComponent_Host_0(l:any):import0.ɵViewDefinition {
  return import0.ɵvid(0,[
    (l()(),import0.ɵeld(0,(null as any),(null as any),1,'yaga-map',([] as any[]),(null as any),(null as any),(null as any),View_MapComponent_0,RenderType_MapComponent)),
    import0.ɵdid(4243456,(null as any),0,import1.MapComponent,[import0.ElementRef],(null as any),(null as any))
  ]
  ,(null as any),(null as any));
}
export const MapComponentNgFactory:import0.ComponentFactory<import1.MapComponent> = import0.ɵccf('yaga-map',import1.MapComponent,View_MapComponent_Host_0,{
  zoom: 'zoom',
  lat: 'lat',
  lng: 'lng',
  minZoom: 'minZoom',
  maxZoom: 'maxZoom',
  maxBounds: 'maxBounds',
  closePopupOnClick: 'closePopupOnClick',
  zoomSnap: 'zoomSnap',
  zoomDelta: 'zoomDelta',
  trackResize: 'trackResize',
  boxZoomEnabled: 'boxZoomEnabled',
  doubleClickZoomEnabled: 'doubleClickZoomEnabled',
  draggingEnabled: 'draggingEnabled',
  fadeAnimation: 'fadeAnimation',
  markerZoomAnimation: 'markerZoomAnimation',
  transform3DLimit: 'transform3DLimit',
  zoomAnimation: 'zoomAnimation',
  zoomAnimationThreshold: 'zoomAnimationThreshold',
  inertia: 'inertia',
  inertiaDeceleration: 'inertiaDeceleration',
  inertiaMaxSpeed: 'inertiaMaxSpeed',
  easeLinearity: 'easeLinearity',
  worldCopyJump: 'worldCopyJump',
  maxBoundsViscosity: 'maxBoundsViscosity',
  keyboardEnabled: 'keyboardEnabled',
  keyboardPanDelta: 'keyboardPanDelta',
  scrollWheelZoomEnabled: 'scrollWheelZoomEnabled',
  wheelDebounceTime: 'wheelDebounceTime',
  wheelPxPerZoomLevel: 'wheelPxPerZoomLevel',
  tapEnabled: 'tapEnabled',
  tapTolerance: 'tapTolerance',
  bounceAtZoomLimits: 'bounceAtZoomLimits',
  touchZoomEnabled: 'touchZoomEnabled'
}
,{
  zoomChange: 'zoomChange',
  latChange: 'latChange',
  lngChange: 'lngChange',
  minZoomChange: 'minZoomChange',
  maxZoomChange: 'maxZoomChange',
  maxBoundsChange: 'maxBoundsChange',
  baselayerchangeEvent: 'baselayerchange',
  overlayaddEvent: 'overlayadd',
  overlayremoveEvent: 'overlayremove',
  layeraddEvent: 'layeradd',
  layerremoveEvent: 'layerremove',
  zoomlevelschangeEvent: 'zoomlevelschange',
  resizeEvent: 'resize',
  unloadEvent: 'unload',
  viewresetEvent: 'viewreset',
  loadEvent: 'load',
  zoomstartEvent: 'zoomstart',
  movestartEvent: 'movestart',
  zoomEvent: 'zoom',
  moveEvent: 'move',
  zoomendEvent: 'zoomend',
  moveendEvent: 'moveend',
  popupopenEvent: 'popupopen',
  popupcloseEvent: 'popupclose',
  autopanstartEvent: 'autopanstart',
  tooltipopenEvent: 'tooltipopen',
  tooltipcloseEvent: 'tooltipclose',
  clickEvent: 'click',
  dblclickEvent: 'dblclick',
  mousedownEvent: 'mousedown',
  mouseupEvent: 'mouseup',
  mouseoverEvent: 'mouseover',
  mouseoutEvent: 'mouseout',
  mousemoveEvent: 'mousemove',
  contextmenuEvent: 'contextmenu',
  keypressEvent: 'keypress',
  preclickEvent: 'preclick',
  zoomanimEvent: 'zoomanim'
}
,['*']);
//# sourceMappingURL=data:application/json;base64,eyJmaWxlIjoiL1VzZXJzL2F0ZC9Eb2N1bWVudHMvUHJvamVrdGUveWFnYS9yZWxlYXNlNGxlYWZsZXQtbmcyL3RzL21hcC5jb21wb25lbnQubmdmYWN0b3J5LnRzIiwidmVyc2lvbiI6Mywic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibmc6Ly8vVXNlcnMvYXRkL0RvY3VtZW50cy9Qcm9qZWt0ZS95YWdhL3JlbGVhc2U0bGVhZmxldC1uZzIvdHMvbWFwLmNvbXBvbmVudC50cyIsIm5nOi8vL1VzZXJzL2F0ZC9Eb2N1bWVudHMvUHJvamVrdGUveWFnYS9yZWxlYXNlNGxlYWZsZXQtbmcyL3RzL21hcC5jb21wb25lbnQudHMuTWFwQ29tcG9uZW50Lmh0bWwiLCJuZzovLy9Vc2Vycy9hdGQvRG9jdW1lbnRzL1Byb2pla3RlL3lhZ2EvcmVsZWFzZTRsZWFmbGV0LW5nMi90cy9tYXAuY29tcG9uZW50LnRzLk1hcENvbXBvbmVudF9Ib3N0Lmh0bWwiXSwic291cmNlc0NvbnRlbnQiOlsiICIsIjxzcGFuIHN0eWxlPVwiZGlzcGxheTogbm9uZVwiPjxuZy1jb250ZW50PjwvbmctY29udGVudD48L3NwYW4+IiwiPHlhZ2EtbWFwPjwveWFnYS1tYXA+Il0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7OztNQ0FBO1FBQUE7UUFBQTtNQUFBO0lBQUE7Z0JBQTRCOzs7Ozs7SUNBNUI7Z0JBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7In0=
